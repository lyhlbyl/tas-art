
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW ATOM COLON COMMA DOT LPAREN RPAREN VARIABLEprogram : clausesclauses : clause clauses\n               |clause : fact\n              | rulefact : ATOM LPAREN terms RPAREN DOTrule : predicate ARROW predicate DOTpredicate : ATOM LPAREN terms RPARENterms : term COMMA terms\n             | term\n             |term : ATOM\n            | VARIABLE'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,19,21,],[-3,0,-1,-3,-4,-5,-2,-7,-6,]),'ATOM':([0,3,4,5,9,10,18,19,20,21,],[6,6,-4,-5,11,16,11,-7,11,-6,]),'LPAREN':([6,16,],[9,20,]),'ARROW':([7,17,],[10,-8,]),'RPAREN':([9,11,12,13,14,18,20,22,23,],[-11,-12,17,-10,-13,-11,-11,-9,24,]),'VARIABLE':([9,18,20,],[14,14,14,]),'COMMA':([11,13,14,],[-12,18,-13,]),'DOT':([15,17,24,],[19,21,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'clauses':([0,3,],[2,8,]),'clause':([0,3,],[3,3,]),'fact':([0,3,],[4,4,]),'rule':([0,3,],[5,5,]),'predicate':([0,3,10,],[7,7,15,]),'terms':([9,18,20,],[12,22,23,]),'term':([9,18,20,],[13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> clauses','program',1,'p_program','eval_abc_parser.py',72),
  ('clauses -> clause clauses','clauses',2,'p_clauses','eval_abc_parser.py',76),
  ('clauses -> <empty>','clauses',0,'p_clauses','eval_abc_parser.py',77),
  ('clause -> fact','clause',1,'p_clause','eval_abc_parser.py',84),
  ('clause -> rule','clause',1,'p_clause','eval_abc_parser.py',85),
  ('fact -> ATOM LPAREN terms RPAREN DOT','fact',5,'p_fact','eval_abc_parser.py',89),
  ('rule -> predicate ARROW predicate DOT','rule',4,'p_rule','eval_abc_parser.py',93),
  ('predicate -> ATOM LPAREN terms RPAREN','predicate',4,'p_predicate','eval_abc_parser.py',97),
  ('terms -> term COMMA terms','terms',3,'p_terms','eval_abc_parser.py',101),
  ('terms -> term','terms',1,'p_terms','eval_abc_parser.py',102),
  ('terms -> <empty>','terms',0,'p_terms','eval_abc_parser.py',103),
  ('term -> ATOM','term',1,'p_term','eval_abc_parser.py',112),
  ('term -> VARIABLE','term',1,'p_term','eval_abc_parser.py',113),
]
